name: arm

on:
  # Workflow dispatched manually
  workflow_dispatch:
  # Workflow under a monthly Patch Tuesday schedule
  schedule:
  - cron: '30 23 8-14 * 2'

permissions:
  contents: read
  packages: write

jobs:
  # Generate an image with the IAR Build Tools for Arm (Windows)
  # *with* full device support
  arm-windows:
    strategy:
      matrix:
        os: [ 2019 ]
        url: [ "https://netstorage.iar.com/FileStore/STANDARD/001/003/582/cxarm-9.60.4.11196.exe" ]
    runs-on: windows-${{ matrix.os }}
    steps:
    - name: 'Checkout GitHub Action' 
      uses: actions/checkout@main
    - if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - if: github.event_name != 'pull_request'
      run: |
        $url = "${{ matrix.url }}";
        $match = [regex]::match($url,'cx([a-z]+)-(\d+\.\d+\.\d+).*exe');
        $target  = $match.groups[1].value;
        $version = $match.groups[2].value;
        docker build -t ghcr.io/${{ github.repository_owner }}/${target}:${version}-windows -f .github/workflows/Dockerfile-${target}.win-${{ matrix.os }} .github/workflows --build-arg URL=${{ matrix.url }} --build-arg TARGET=${target} --build-arg VERSION=${version};
        docker push ghcr.io/${{ github.repository_owner }}/${target}:${version}-windows;
      shell: pwsh

  # Generate variant images with the IAR Build Tools for Arm (Linux)
  # *with* vendor-specific device support
  arm-linux:
    needs: [ arm-windows ]
    strategy:
      matrix:
        target: [ arm ]
        version: [ 9.60.4 ]
        variant:
        - additional
        - microchip
        - minimal
        - renesas
        - nxp
        - infineon
        - st
        - ti
        timestamp: [ 20250303090915 ]
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@main
    - if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/build-push-action@v6
      with:
        file: ./.github/workflows/Dockerfile-${{ matrix.target }}.device
        build-args: |
          TARGET=${{ matrix.target }}
          VERSION=${{ matrix.version }}
          VARIANT=${{ matrix.variant }}
          TIMESTAMP=${{ matrix.timestamp }}
        push: ${{ github.event_name != 'pull_request' }}
        # With this the image to be pushed will be tagged as
        # ghcr.io/<account>/<target>:<version>-<variant>
        tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.target }}:${{ matrix.version }}-${{ matrix.variant }}

  # Finally, generate the base image with the IAR Build tools for Arm (Linux)
  # *without* vendor-specific device support (tagged as :latest)
  arm-base-linux:
    needs: [ arm-linux ]
    strategy:
      matrix:
        target: [ arm ]
        version: [ 9.60.4 ]
        variant:
        - base
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@main
    - if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - if: matrix.variant == 'base'
      uses: docker/build-push-action@v6
      with:
        file: ./.github/workflows/Dockerfile-${{ matrix.target }}
        build-args: |
          TARGET=${{ matrix.target }}
          VERSION=${{ matrix.version }}
          VARIANT=${{ matrix.variant }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ matrix.target }}:${{ matrix.version }}-${{ matrix.variant }}
          ghcr.io/${{ github.repository_owner }}/${{ matrix.target }}:${{ matrix.version }}
          ghcr.io/${{ github.repository_owner }}/${{ matrix.target }}:latest
